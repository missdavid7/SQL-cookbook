/*3.1 Stacking one rowset atop another*/     
select ename as ename_and_dname,deptno
    from emp
    where deptno = 10
    union all
select '-----------', null
	union all
select dname,deptno
    from dept;
    
/*3.2 Combining related rows*/   
select e.ename,d.loc
from emp as e,dept as d
where e.deptno = 10 and e.deptno = d.deptno;

select e.ename,d.loc
from emp as e 
inner join 
dept as d
on (e.deptno = d.deptno)
where e.deptno = 10;

    
/*3.3 Finding rows in common between two tables*/   
create view A
as 
select ename,job, sal
from emp
where job  =  'CLERK';
select * from A;

select e.empno,e.ename,e.job,e.sal,e.deptno
from emp as e, A
where e.ename = A.ename
and e.job = A.job
and e.sal = A.sal;

/*3.4 Retrieving values from one table that do not exist in another*/
select deptno
from dept
where deptno not in (select deptno from emp);   


/*3.5 Retrieving rows from one table that do not correspond to rows in another*/
select d.* 
from dept d left join emp e 
on (d.deptno = e.deptno)
where e.deptno is null;

/*3.6 Adding joins to a query without interfering with other joins*/


drop table if exists emp_bonus;
create table emp_bonus(
	empno			NUMERIC 		not null,
    Received			date				not null,
    type				numeric			not null
);


insert into emp_bonus
	(EMPNO, RECEIVED, Type)
values
	(7369, '2005-3-14', 1),
	(7900, '2005-3-14', 2),
	(7788, '2005-3-14', 3);


select e.ename,d.loc,eb.received
from emp e join dept d 
on (e.deptno = d.deptno)
left join emp_bonus eb
on(e.empno = eb.empno)
order by 2;

select e.ename,d.loc
from emp e join dept d 
on (e.deptno = d.deptno);



/*3.7 Determining whether two tables have the same data*/
create view B 
as 
select * from emp where deptno != 10
union all 
select * from emp where ename = 'Ward';
select * from B;

-- Solution:
-- First, find rows in table EMP that do not exist in view B
-- Then combine (union all) those rows with rows from view V that do not exist in table EMP



 select *
from ( select e.empno,e.ename,e.job,e.mgr,e.hiredate,e.sal,e.comm,e.deptno,count(*) as cnt
 from emp  e
 group by  empno,ename,job,mgr,hiredate,sal,comm,deptno) e
 where not exists (
select null
from (
select  b.empno,b.ename,b.job,b.mgr,b.hiredate,b.sal,b.comm,b.deptno,count(*) as cnt
from b 
group by  empno,ename,job,mgr,hiredate,sal,comm,deptno) b
where b.empno = e.empno 
and b.ename = e.ename
and b.job = e.job
and coalesce(b.mgr,0) = coalesce(e.mgr,0)
and b.hiredate = e.hiredate
and b.sal = e.sal
and coalesce(b.comm,0) = coalesce(e.comm,0)
)
union all
 select *
	from ( select b.empno,b.ename,b.job,b.mgr,b.hiredate,b.sal,b.comm,b.deptno,count(*) as cnt
 from emp b
 group by  empno,ename,job,mgr,hiredate,sal,comm,deptno) b
 where not exists (
select null
from (
select  e.empno,e.ename,e.job,e.mgr,e.hiredate,e.sal,e.comm,e.deptno,count(*) as cnt
from emp e 
group by  empno,ename,job,mgr,hiredate,sal,comm,deptno) e
where b.empno = e.empno 
and b.ename = e.ename
and b.job = e.job
and coalesce(b.mgr,0) = coalesce(e.mgr,0)
and b.hiredate = e.hiredate
and b.sal = e.sal
and coalesce(b.comm,0) = coalesce(e.comm,0)
);

/*3.8 Identifying and avoiding cartesian products*/
select e.ename, d.loc
	from emp e,dept d
    where e.deptno = 10
    and d.deptno = e.deptno;
    

/*3.9 IPerforming joins when using aggregates*/
DROP TABLE IF EXISTS emp_bonus;
 CREATE TABLE emp_bonus(
	EMPNO 		NUMERIC 	NOT NULL,
	RECIEVED 	DATE 		NOT NULL,
	TYPE 		NUMERIC 	NOT NULL
);
 INSERT INTO emp_bonus
	(EMPNO, RECIEVED, TYPE)
VALUES 
	(7934, '2005-3-17', 1),
	(7934, '2005-3-15', 2),
	(7839, '2005-3-15', 3),
	(7782, '2005-3-15', 1);
    
select deptno, sum(distinct sal) as total_sal, sum(bonus) as total_bonus
from ( 
	select e.empno,
		e.ename,
                e.sal,
                e.deptno,
                e.sal * case 
                                     -- include extra case 
                                    when eb.type = 1 then 0.1
				    when eb.type = 2 then 0.2
                                    else .3
                                    end as bonus
	from emp e, emp_bonus eb
    where e.empno = eb.empno
    and e.deptno = 10
    ) x
    group by deptno;
    
select d.deptno, 
d.total_sal,
sum(e.sal * case when eb.type =1 then 0.1
		 when eb.type = 2 then 0.2
		 else .3 end) as total_bonus
from emp e, 
	emp_bonus eb,
		(
select deptno, sum(sal) as total_sal
		from emp
            where deptno =10
            group by deptno
            ) d
where e.deptno = d.deptno 
and e.empno = eb.empno
group by d.deptno,d.total_sal;
    
/*3.10 Performing Outer Joins when using aggregates*/
drop table if exists emp_bonus;
create table emp_bonus
(empno	numeric	not null,
received 	date 	not null,
type	numeric	not null);

insert into emp_bonus
(empno,received,type)
value 
(7934, '2005-3-17', 1),
	(7934, '2005-2-15', 2);
    
 select deptno,
 sum(distinct sal) as total_sal, 
 sum(bonus) as total_bonus
from ( 
	select e.empno,
		e.ename,
                e.sal,
                e.deptno,
                e.sal * case 
                 -- include extra case 
                            when eb.type = 1 then 0.1
			    when eb.type = 2 then 0.2
                            else .3
                                    end as bonus
	from emp e left outer join emp_bonus eb
    on (e.empno = eb.empno)
    where e.deptno = 10
    ) x
    group by deptno;
    
/*3.11 Returning missing data from multiple tables*/
select d.deptno,d.dname,e.ename
from dept d left outer join emp e 
on (d.deptno = e.deptno);

insert into emp(empno,ename,job,mgr,hiredate,sal,comm,deptno)
select 1111,'yoda','jedi',null,hiredate,sal,comm,null
from emp
where ename = 'king';

select d.deptno,d.dname,e.ename
from dept d right outer join emp e
on (d.deptno = e.deptno);


select d.deptno,d.dname,e.ename
from dept d left outer join emp e 
on (d.deptno = e.deptno)
union
select d.deptno,d.dname,e.ename
from dept d right outer join emp e
on (d.deptno = e.deptno);


 /*3.12 Using nulls in operations and comparisons*/
 select ename,comm,coalesce(comm,0)
 from emp
 where coalesce(comm,0) < (select comm from emp where ename = 'WARD');


